# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      # - name: Validate required secrets
      #   shell: bash
      #   run: |
      #     if [ -z "${{ secrets.PROTECT_PASS_777 }}" ] || [ -z "${{ secrets.PROTECT_PASS_ARVORE }}" ] || [ -z "${{ secrets.PAGES_PASS_KEY }}" ]; then
      #       echo "Missing required secrets!" >&2
      #       exit 1
      #     fi
      # - name: Create production override config with secret
      #   shell: bash
      #   run: |
      #     echo "protect_secret: \"${{ secrets.PAGES_PASS_KEY }}\"" > _config_prod.yml
      # - name: Replace passwords in protect-config.js
      #   run: |
      #     sed -i "s|__PROTECT_PASS_777__|${{ secrets.PROTECT_PASS_777 }}|g" js/protect-config.js
      #     sed -i "s|__PROTECT_PASS_ARVORE__|${{ secrets.PROTECT_PASS_ARVORE }}|g" js/protect-config.js
      # - name: Debug protect-config.js
      #   run: cat js/protect-config.js

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install javascript-obfuscator
        run: npm install -g javascript-obfuscator

      - name: Obfuscate protect-config.js
        run: |
          javascript-obfuscator js/protect-config.js --output js/protect-config.js \
            --compact true \
            --self-defending true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 1 \
            --dead-code-injection true \
            --dead-code-injection-threshold 1 \
            --string-array true \
            --string-array-encoding base64 \
            --string-array-threshold 1 \
            --rename-globals true \
            --identifier-names-generator mangled \
            --numbers-to-expressions true \
            --split-strings true \
            --split-strings-chunk-length 3
      - name: Build with Jekyll
        env:
          JEKYLL_ENV: production
        run: |
          bundle exec jekyll build --config _config.yml,_config_prod.yml
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
